name: HRspace workflow

on:
  push:
    branches:
      - feature_ci_cd

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install -r requirements.txt
  tests:
      runs-on: ubuntu-latest
      needs: install
      steps:
      - name: Test with flake8
        run: |
          pip install flake8 pep8-naming flake8-broken-line flake8-return
          python -m flake8

  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      needs: tests
      steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          push: true
          context: ./fastapi_app
          tags: ${{ secrets.DOCKER_USERNAME }}/scid_bot_app:latest
      # - name: Push to Docker Hub
      #   uses: docker/build-push-action@v2 
      #   with:
      #     push: true
      #     context: ./frontend
      #     tags: ${{ secrets.DOCKER_USERNAME }}/hrspace_frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
        - name: executing remote ssh commands to deploy
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USER }}
            key: ${{ secrets.SSH_KEY }}
            passphrase: ${{ secrets.PASSPHRASE }}
            script: |
              sudo docker-compose stop
              sudo docker system prune -f
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/scid_bot_app:latest
              rm .env
              touch .env
              echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
              echo DB_NAME=${{ secrets.DB_NAME }} >> .env
              echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
              echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
              echo DB_HOST=${{ secrets.DB_HOST }} >> .env
              echo DB_PORT=${{ secrets.DB_PORT }} >> .env
              echo DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} >> .env
              sudo docker-compose up -d
