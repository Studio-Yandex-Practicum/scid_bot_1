name: CI_CD workflow

on:
  push:
    branches:
      - feature_ci_cd

jobs:
  install_and_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install -r requirements.txt
    # - name: Test with flake8
    #   run: |
    #     pip install flake8 pep8-naming flake8-broken-line flake8-return
    #     python -m flake8
  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      needs: install_and_test
      steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      # - name: Check current directory
      #   run: pwd
      # - name: List directory structure
      #   run: ls -R
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          push: true
          context: ./fastapi_app
          tags: ${{ secrets.DOCKER_USERNAME }}/scid_bot_app:latest
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          push: true
          context: ./bot
          tags: ${{ secrets.DOCKER_USERNAME }}/scid_bot:latest
      # - name: Push to Docker Hub
      #   uses: docker/build-push-action@v2 
      #   with:
      #     push: true
      #     context: ./frontend
      #     tags: ${{ secrets.DOCKER_USERNAME }}/hrspace_frontend:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2 
    - name: Check current directory
      run: pwd
    - name: List directory structure
      run: ls -R
    - name: Check if docker-compose_cd.yml exists
      run: ls -l docker-compose_cd.yml
    - name: Copy docker-compose.yml to server
      uses: appleboy/scp-action@v0.1.1
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        source: docker-compose_cd.yml
        target: ./docker-compose_yyy.yml
        # target: ./scid/docker-compose.yml
        # overwrite: true
        # debug: true  # Включаем отладку
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          sudo pwd
          sudo ls -la
          sudo docker-compose -f scid/docker-compose.yml stop
          sudo docker system prune -f
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/scid_bot_app:latest
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/scid_bot:latest
          sudo docker-compose -f scid/docker-compose.yml up -d
