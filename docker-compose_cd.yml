volumes:
  postgres_data:
  fastapi_app_files:
  static:
  # certbot_etc:
  # certbot_www: 

services:
  db:
    restart: always
    image: postgres:13
    env_file:      
      - './.env'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - scid_bot_1

  fastapi_app:
    image: findy1bz/scid_bot_app:latest
    volumes:
      # - ./fastapi_app:/app
      - fastapi_app_files:/app/files
      - static:/app/static
    env_file:      
      - './.env'
    depends_on:
      - db
    ports:
      - "8000:8000"  
    #  - "80:80"
    networks:
      - scid_bot_1

  bot:
    image: findy1bz/scid_bot:latest
    env_file:      
      - './.env'
    depends_on:
      - fastapi_app
    networks:
      - scid_bot_1   
    volumes:
      - fastapi_app_files:/usr/src/app/files

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx:/etc/nginx/conf.d
    #  - ./scid/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - fastapi_app_files:/usr/share/nginx/html/files
      - static:/usr/share/nginx/html/static
      # - certbot_etc:/etc/letsencrypt
      # - certbot_www:/var/www/certbot  
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - fastapi_app
    networks:
      - scid_bot_1

  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - certbot_etc:/etc/letsencrypt
  #     - certbot_www:/var/www/certb
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew; done;'"
  #   # depends_on:
  #   #   - nginx
  #   networks:
  #     - scid_bot_1


networks:
 scid_bot_1: