# –û–±—ã—á–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
import aiohttp

from aiogram.types import (
    InlineKeyboardButton,
    InlineKeyboardMarkup
)
from aiogram.filters.callback_data import CallbackData

API_URL = 'https://your-api-endpoint.com'

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –∫–ª–∞—Å—Å CallbackData
# action - –∫–∞–∫–æ–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –¥–µ–π—Å—Ç–≤–∏–µ
# value - —á—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –¥–µ–π—Å—Ç–≤–∏–µ–º
# extra - –¥–æ–ø –∏–Ω—Ñ–∞
class ButtonCallback(CallbackData, prefix="action"):
    value: str
    extra_info: str


def get_start_keyboard():
    button1 = InlineKeyboardButton(
        text="üî• –Ø–Ω–¥–µ–∫—Å",
        callback_data=ButtonCallback(value="btn1",
                                     extra_info="info1").pack()
    )
    button2 = InlineKeyboardButton(
        text="üî• Google",
        url="https://google.com/",
    )
    # –ö–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
    row = [button1, button2]
    # –†—è–¥ –∫–Ω–æ–ø–æ–∫
    rows = [row]
    # –ò–Ω—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    markup = InlineKeyboardMarkup(inline_keyboard=rows)
    return markup


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã - –ö–Ω–æ–ø–∫–∏
async def fetch_buttons_from_api(endpoint_id: int):
    async with aiohttp.ClientSession() as session:
        try:
            async with session.get(f"{API_URL}/buttons/{endpoint_id}") as response:
                if response.status == 200:
                    data = await response.json()
                    return data.get('buttons', [])
                else:
                    return []
        except Exception as e:
            print(f"Error fetching buttons: {str(e)}")
            return []


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã - –ú–µ–Ω—é –∏–∑ –∫–Ω–æ–ø–æ–∫
async def inline_menu(buttons, columns=2, start_id=1) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardBuilder()

    for button in buttons:
        keyboard.add(InlineKeyboardButton(
            text=button["label"],
            callback_data=f"{button['id']},{button['parent_id']}"
        ))
    keyboard.adjust(columns)

    # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –∏ "–í –Ω–∞—á–∞–ª–æ"
    parent_id = buttons[0].get('parent_id', start_id)
    keyboard.add(InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥", callback_data=f"{parent_id}"
    ))
    keyboard.add(InlineKeyboardButton(
        text="–í –Ω–∞—á–∞–ª–æ", callback_data=f"{start_id}"
    ))
    keyboard.adjust(1)

    return keyboard.as_markup()