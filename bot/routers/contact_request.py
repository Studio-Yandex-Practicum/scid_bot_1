import re

from aiogram import Bot, F, Router, types
from aiogram.filters import Command
from aiogram.types.reply_keyboard_remove import ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext

from api.api_managers import create_contact_request
from core.config import settings
from keyboards.contact_request import (
    ContactViaCallback,
    CONTACT_REQUEST_CANCEL_MENU,
    CONTACT_REQUEST_CONTACT_VIA_MENU,
    CONTACT_REQUEST_GET_EMAIL_BUTTON,
    CONTACT_REQUEST_GET_PHONE_BUTTON,
    CONTACT_REQUEST_SEND_REQUEST_MENU,
    CONTACT_REQUEST_START_BUTTON
)
from utils.manager_state import ContactRequestState


router = Router()


@router.message(Command("request_contact"))
async def contact_request_start(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /request_contact"""
    await state.set_state(ContactRequestState.start)
    await state.update_data(
        current_user_username=message.from_user.username,
        current_user_id=message.from_user.id
    )
    await message.answer(
        text=(
            "–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –º–µ–Ω–µ–¥–∂–µ—Ä—É, —É–∫–∞–∑–∞–≤ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –¥–ª—è —Å–≤—è–∑–∏ "
            "–∏ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–º–æ–∂–µ—Ç –í–∞–º!"
        ),
        reply_markup=CONTACT_REQUEST_START_BUTTON
    )


@router.message(
    F.text == "üîö –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å"
)
async def contact_request_cancel_request(
    message: types.Message,
    state: FSMContext
):
    """–û—Ç–º–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å"""
    await state.clear()
    await message.answer(
        text=("–í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–º–µ–Ω—ë–Ω")
    )


@router.callback_query(ContactRequestState.start)
async def contact_request_wait_question(
    callback: types.CallbackQuery,
    state: FSMContext
):
    """–ó–∞–ø—Ä–æ—Å –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    await state.set_state(ContactRequestState.enter_question)
    await callback.message.answer(
        text=("–í–≤–µ–¥–∏—Ç–µ –í–∞—à –≤–æ–ø—Ä–æ—Å"),
        reply_markup=CONTACT_REQUEST_CANCEL_MENU
    )


@router.message(
    ContactRequestState.enter_question,
    F.text != "üîö –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å"
)
async def contact_request_wait_phone(
    message: types.Message,
    state: FSMContext
):
    """–ó–∞–ø—Ä–æ—Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    await state.update_data(question=message.text)
    await state.set_state(ContactRequestState.enter_phone)
    await message.reply(
        text=("–í–æ–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç.\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"),
        reply_markup=CONTACT_REQUEST_GET_PHONE_BUTTON
    )


@router.message(ContactRequestState.enter_phone)
@router.message(F.contact)
async def contact_request_wait_email(
    message: types.Message,
    state: FSMContext,
    bot: Bot
):
    """–ó–∞–ø—Ä–æ—Å email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    text = "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –í–∞—à e-mail"
    await state.update_data(phone=None)
    if message.contact:
        await state.update_data(phone=message.contact.phone_number)
        await bot.delete_message(
            chat_id=message.chat.id,
            message_id=message.message_id
        )
        text = "–í–∞—à –Ω–æ–º–µ—Ä —Å–æ—Ö—Ä–∞–Ω—ë–Ω.\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –í–∞—à e-mail"
    await state.set_state(ContactRequestState.enter_email)
    await message.answer(
        text=text,
        reply_markup=CONTACT_REQUEST_GET_EMAIL_BUTTON
    )

@router.message(ContactRequestState.enter_email)
async def contact_request_wait_contact_via(
    message: types.Message,
    state: FSMContext,
    bot: Bot
):
    """–ó–∞–ø—Ä–æ—Å —É–¥–æ–±–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ —Å–≤—è–∑–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    text = "–í—ã–±–µ—Ä–∏—Ç–µ, —É–¥–æ–±–Ω—ã–π –¥–ª—è –í–∞—Å, —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏"
    await state.update_data(email=None)
    if message.text != "üö´ –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å e-mail":
        email = message.text
        if re.fullmatch(settings.validation.regex_email_validation, email):
            await state.update_data(email=email)
            await state.set_state(ContactRequestState.end)
            await bot.delete_message(
                chat_id=message.chat.id,
                message_id=message.message_id
            )
            text = (
                "–í–∞—à e-mail —Å–æ—Ö—Ä–∞–Ω—ë–Ω.\n\n–í—ã–±–µ—Ä–∏—Ç–µ, —É–¥–æ–±–Ω—ã–π –¥–ª—è –í–∞—Å, "
                "—Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏"
            )
        else:
            await message.answer(text="E-mail –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
            return await contact_request_wait_email(
                message=message,
                state=state,
                bot=bot
            )
    await state.set_state(ContactRequestState.enter_contact_via)
    await message.answer(
        text=text,
        reply_markup=CONTACT_REQUEST_CONTACT_VIA_MENU
    )


@router.callback_query(
    ContactRequestState.enter_contact_via,
    ContactViaCallback.filter()
)
async def contact_request_check_response(
    callback: types.CallbackQuery,
    state: FSMContext,
    callback_data: ContactViaCallback
):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    data = await state.get_data()
    tg = data["current_user_username"] if data["current_user_username"] else ""
    phone = data["phone"] if data["phone"] else ""
    email = data["email"] if data["email"] else ""
    text = (
        f"<b>–í–∞—à –≤–æ–ø—Ä–æ—Å:</b>\n {data['question']}\n\n"
        f"–ö–æ–Ω—Ç–∞–∫—Ç—ã:\n"
        f"<b>–¢–µ–ª–µ–≥—Ä–∞–º:</b> @{tg}\n"
        f"<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {phone}\n"
        f"<b>E-mail:</b> {email}\n"
        f"<b>–°–ø–æ—Å–æ–± —Å–≤—è–∑–∏:</b> {callback_data.contact_type}"
    )
    await state.update_data(
        contact_via_type=callback_data.contact_type,
        info_message_id=callback.message.message_id
    )
    await state.set_state(ContactRequestState.end)
    await callback.message.answer(
        text=text,
        reply_markup=CONTACT_REQUEST_SEND_REQUEST_MENU
    )


@router.message(
    ContactRequestState.end
)
async def contact_request_send_response(
    message: types.Message,
    state: FSMContext,
    bot: Bot
):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞"""
    data = await state.get_data()
    await bot.delete_message(
        chat_id=message.chat.id,
        message_id=data["info_message_id"]
    )
    
    response = await create_contact_request(data)
    if 'detail' not in response:
        await state.clear()
        return await message.answer(
            text=(
                "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–∏—Ç—Å—è —Å –í–∞–º–∏ "
                "–≤ –±–ª–∏–∂–∞–π—â–µ–µ –≤—Ä–µ–º—è"
            )
        )
    await message.answer(
        text=f"–í–æ –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {response['detail']}"
    )